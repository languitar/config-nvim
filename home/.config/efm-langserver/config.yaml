---
version: 2
root-markers:
  - .git/

tools:
  css-prettier: &css-prettier
    format-command: "prettier ${--tab-width:tabWidth} ${--single-quote:singleQuote} --parser css"

  dockerfile-hadolint: &dockerfile-hadolint
    lint-command: "hadolint"
    lint-formats:
      - "%f:%l %m"

  fish-fish: &fish-fish
    lint-command: "fish -n"
    lint-formats:
      - "%f (line %l): %m"

  html-prettier: &html-prettier
    format-command: "prettier ${--tab-width:tabWidth} ${--single-quote:singleQuote} --parser html"

  javascript-eslint: &javascript-eslint
    lint-command: "eslint -f visualstudio --stdin --stdin-filename ${INPUT}"
    lint-ignore-exit-code: true
    lint-stdin: true
    lint-formats:
      - "%f(%l,%c): %tarning %m"
      - "%f(%l,%c): %rror %m"

  json-prettier: &json-prettier
    format-command: "prettier ${--tab-width:tabWidth} --parser json"

  json-jq: &json-jq
    lint-command: "jq ."

  lua-lua-format: &lua-lua-format
    format-command: "lua-format -i"
    format-stdin: true

  markdown-markdownlint: &markdown-markdownlint
    lint-command: "markdownlint -s -c ~/.markdownlintrc"
    lint-stdin: true
    lint-formats:
      - "%f:%l %m"
      - "%f:%l:%c %m"
      - "%f: %l: %m"

  markdown-pandoc: &markdown-pandoc
    format-command: "pandoc -f markdown -t gfm -sp --tab-stop=2"

  markdown-prettier: &markdown-prettier
    format-command: "prettier ${--tab-width:tabWidth} ${--single-quote:singleQuote} --parser markdown"

  python-flake8: &python-flake8
    lint-command: "flake8 --stdin-display-name ${INPUT} -"
    lint-stdin: true
    lint-formats:
      - "%f:%l:%c: %m"

  python-mypy: &python-mypy
    lint-command: "mypy --show-column-numbers"
    lint-formats:
      - "%f:%l:%c: %trror: %m"
      - "%f:%l:%c: %tarning: %m"
      - "%f:%l:%c: %tote: %m"

  python-black: &python-black
    format-command: "black --quiet -"
    format-stdin: true

  python-isort: &python-isort
    format-command: "isort --quiet -"
    format-stdin: true

  rst-pandoc: &rst-pandoc
    format-command: "pandoc -f rst -t rst -s --columns=79"

  rst-lint: &rst-lint
    lint-command: "rst-lint"
    lint-formats:
      - "%tNFO %f:%l %m"
      - "%tARNING %f:%l %m"
      - "%tRROR %f:%l %m"
      - "%tEVERE %f:%l %m"

  sh-shellcheck: &sh-shellcheck
    lint-command: "shellcheck -f gcc -x"
    lint-source: "shellcheck"
    lint-formats:
      - "%f:%l:%c: %trror: %m"
      - "%f:%l:%c: %tarning: %m"
      - "%f:%l:%c: %tote: %m"

  sh-shfmt: &sh-shfmt
    format-command: "shfmt -ci -s -bn"
    format-stdin: true

  vim-vint: &vim-vint
    lint-command: "vint -"
    lint-stdin: true
    lint-formats:
      - "%f:%l:%c: %m"

  yaml-yamllint: &yaml-yamllint
    lint-command: "yamllint -f parsable -"
    lint-stdin: true

  yaml-prettier: &yaml-prettier
    format-command: "prettier ${--tab-width:tabWidth} ${--single-quote:singleQuote} --parser yaml"

languages:
  css:
    - <<: *css-prettier

  dockerfile:
    - <<: *dockerfile-hadolint

  fish:
    - <<: *fish-fish

  javascript:
    - <<: *javascript-eslint

  json:
    - <<: *json-jq
    - <<: *json-prettier

  html:
    - <<: *html-prettier

  lua:
    - <<: *lua-lua-format

  markdown:
    - <<: *markdown-markdownlint
    - <<: *markdown-pandoc
    - <<: *markdown-prettier

  python:
    - <<: *python-flake8
    - <<: *python-mypy
    - <<: *python-black
    - <<: *python-isort

  rst:
    - <<: *rst-lint
    - <<: *rst-pandoc

  sh:
    - <<: *sh-shellcheck

  vim:
    - <<: *vim-vint

  yaml:
    - <<: *yaml-prettier
    - <<: *yaml-yamllint
