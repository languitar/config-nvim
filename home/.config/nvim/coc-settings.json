{
    "languageserver": {
        "bash": {
            "command": "bash-language-server",
            "args": ["start"],
            "filetypes": ["sh"],
            "ignoredRootPaths": ["~"]
        },
        "cquery": {
            "command": "cquery",
            "args": ["--log-file=/tmp/cq.log"],
            "filetypes": ["c", "cpp"],
            "rootPatterns": ["compile_flags.txt", "compile_commands.json", ".vim/", ".git/", ".hg/"],
            "initializationOptions": {
                "cacheDirectory": "/tmp/cquery"
            }
        },
        "terraform": {
			"command": "terraform-ls",
			"args": ["serve"],
			"filetypes": [
				"terraform",
				"tf"
			],
			"initializationOptions": {},
			"settings": {}
		}
    },
    "diagnostic-languageserver.linters": {
        "ansible-lint":{
            "command":"ansible-lint",
            "args":[
                "--offline",
                "--nocolor",
                "--parseable-severity",
                "-qq",
                "%file"
            ],
            "rootPatterns":[
                "roles",
                "tasks",
                "ansible.cfg",
                ".git"
            ],
            "sourceName":"ansible-lint",
            "formatPattern":[
                "^([^:]+):(\\d+):\\s*(\\S+\\s*)\\[(\\S+?)\\]\\s*(.*)$",
                {
                    "sourceName":1,
                    "sourceNameFilter":true,
                    "line":2,
                    "security":4,
                    "message":[
                        3,
                        5
                    ]
                }
            ],
            "securities":{
                "VERY_HIGH":"error",
                "HIGH":"warning",
                "MEDIUM":"warning",
                "LOW":"info",
                "VERY_LOW":"hint",
                "INFO":"hint"
            }
        }
    },
    "diagnostic-languageserver.filetypes": {
        "sh": "shellcheck",
        "markdown": ["write-good"],
        "email": ["languagetool", "write-good"]
    },
    "codeLens.enable": false,
    "diagnostic.displayByAle": false,
    "python.linting.pylintEnabled": false,
    "python.linting.flake8Enabled": true,
    "python.linting.mypyEnabled": true,
    "python.linting.enabled": true,
    // I will use treesitter for syntax highlighting
    "coc.preferences.colorSupport": false,
    "coc.preferences.extensionUpdateCheck": "daily"
}
